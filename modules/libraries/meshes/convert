#!/usr/bin/env python
import torch
from pytorch3d.structures import Meshes

def read_geometry(filename):
    blade_geometry = dict()
    sections = dict()
    vertices = []
    in_geometry = False
    in_section  = False
    in_coords   = False

    prev_line = ''

    with open(filename, 'r') as infile:
        for line in infile:
            if 'NI_BEGIN NIBLADEGEOMETRY' in line:
                in_geometry = True
            if 'NI_END NIBLADEGEOMETRY' in line:
                in_geometry = False
            if 'SECTIONAL' in line:
                in_section = True
                if in_coords:
                    in_coords = False
                section_name = prev_line.strip()
                sections[section_name] = vertices
                vertices = []
            if 'XYZ' in line:
                in_coords = True
            if in_geometry:
                if not in_section:
                    values = line.split()
                    if len(values) > 1:
                        key, *values = values
                        blade_geometry[key] = values
                elif in_coords and '#' not in line:
                    cells = line.split()
                    if len(cells) == 3:
                        x, y, z = map(float, cells)
                        vertices.append((x, y, z))
            prev_line = line
    blade_geometry['sections'] = sections
    return blade_geometry


def main():
    blade_geometry = read_geometry('blade.geomTurbo')
    for k, v in blade_geometry:
        if k != 'sections':
            print(k, v)
    mesh = Mesh(blade_geometry['sections']['pressure'] + blade_geometry['sections']['suction'])
    print(mesh)

if __name__ == '__main__':
    main()
